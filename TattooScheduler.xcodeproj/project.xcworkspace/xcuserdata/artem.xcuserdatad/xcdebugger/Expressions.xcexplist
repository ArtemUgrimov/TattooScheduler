<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "EventViewController.viewDidLoad():EventViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MainViewController.getMonthHeigth(by:):MainViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "range.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MonthView.getStartDateDayPosition():MonthView.swift">
         <PersistentStrings>
            <PersistentString
               value = "date">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UIView.loadNib():NibView.swift">
         <PersistentStrings>
            <PersistentString
               value = "picker">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventListItem.viewDidLoad():EventListItem.swift">
      </ContextState>
      <ContextState
         contextName = "EventEditViewController.fillFromEvent():EventEditViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "editingEvent?.properties.additional">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.viewDidLoad():ViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ViewController.Next(_:):ViewController.swift">
      </ContextState>
      <ContextState
         contextName = "EventEditViewController.imagePickerController(_:didFinishPickingMediaWithInfo:):EventEditViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "info[UIImagePickerControllerReferenceURL] as? URL">
            </PersistentString>
            <PersistentString
               value = "image.path">
            </PersistentString>
            <PersistentString
               value = "info[UIImagePickerControllerImageURL] as? URL">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MonthView.collectionView(_:cellForItemAt:):MonthView.swift">
      </ContextState>
      <ContextState
         contextName = "static UIView.loadFromNib&lt;A&gt;():NibView.swift">
         <PersistentStrings>
            <PersistentString
               value = "type(of: self)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventEditViewController.saveEvent(_:):EventEditViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "imageView.image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MonthView.date.didset:MonthView.swift">
      </ContextState>
      <ContextState
         contextName = "EventEditViewController.callANumber(_:):EventEditViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "URL(string: &quot;tel://1234567&quot;)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static EventListItem.loadFromNib():EventListItem.swift">
         <PersistentStrings>
            <PersistentString
               value = "nib.instantiate(withOwner: self, options: nil)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.collectionView(_:cellForItemAt:):ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "numberOfEmptyBox">
            </PersistentString>
            <PersistentString
               value = "(month + 12) % 12">
            </PersistentString>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
            <PersistentString
               value = "day">
            </PersistentString>
            <PersistentString
               value = "month">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CollectionViewCell.date.didset:CollectionViewCell.swift">
      </ContextState>
      <ContextState
         contextName = "SQLiteStorage.getEvents(for:):SQLiteStorage.swift">
         <PersistentStrings>
            <PersistentString
               value = "&quot;select * from events where date = \(dateFormatter.string(from: date))&quot;">
            </PersistentString>
            <PersistentString
               value = "String(cString: sqlite3_column_text(statement, 1))">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.getStartDateDayPosition():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.calendar.minimumDaysInFirstWeek">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SQLiteStorage.store(event:):SQLiteStorage.swift">
      </ContextState>
      <ContextState
         contextName = "CollectionViewCell.updateIndicator():CollectionViewCell.swift">
      </ContextState>
      <ContextState
         contextName = "CollectionViewCell.awakeFromNib():CollectionViewCell.swift">
      </ContextState>
      <ContextState
         contextName = "ViewController.Back(_:):ViewController.swift">
      </ContextState>
      <ContextState
         contextName = "UITextField.doneButtonAction():Extensions.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.superview?.inputViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NextViewController.viewDidLoad():NextViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "parent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainViewController.collectionView(_:cellForItemAt:):MainViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "components.month">
            </PersistentString>
            <PersistentString
               value = "(MainViewController.halfMonths - indexPath.row)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainViewController.viewDidLoad():MainViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SQLiteStorage.remove(event:):SQLiteStorage.swift">
      </ContextState>
      <ContextState
         contextName = "EventViewController.fillScrollView():EventViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "EventListItem.instanceFromNib()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.GetStartDateDayPosition():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "weekday">
            </PersistentString>
            <PersistentString
               value = "calendar.">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainViewController.scrollViewDidScroll(_:):MainViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "totalMonthsHeight">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
